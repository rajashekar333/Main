#############################################################################


# Sample NRPE Config File 
# Written by: Ethan Galstad (nagios@nagios.org)
# 
# Last Modified: 11-23-2007
# XPLAT SSD NRPE Config File 
# Written by: Ethan Galstad (nagios@nagios.org)
# 
# Last Modified: 10-30-2014
#
# NOTES:
# This is a sample configuration file for the NRPE daemon.  It needs to be
# located on the remote host that is running the NRPE daemon, not the host
# from which the check_nrpe client is being executed.
#############################################################################


# LOG FACILITY
# The syslog facility that should be used for logging purposes.

log_facility=daemon

# LOG FACILITY
# The syslog facility that should be used for logging purposes.

#log_facility=daemon
log_facility=local1
#debug=0


# PID FILE
# The name of the file in which the NRPE daemon should write it's process ID
# number.  The file is only written if the NRPE daemon is started by the root
# user and is running in standalone mode.

#pid_file=/var/run/nrpe.pid
pid_file=/var/run/nrpe/nrpe.pid



# PORT NUMBER
# Port number we should wait for connections on.
# NOTE: This must be a non-priviledged port (i.e. > 1024).
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

server_port=5666



# SERVER ADDRESS
# Address that nrpe should bind to in case there are more than one interface
# and you do not want nrpe to bind on all interfaces.
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#server_address=127.0.0.1



# NRPE USER
# This determines the effective user that the NRPE daemon should run as.  
# You can either supply a username or a UID.
# 
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_user=nagios



# NRPE GROUP
# This determines the effective group that the NRPE daemon should run as.  
# You can either supply a group name or a GID.
# 
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_group=nagios



# ALLOWED HOST ADDRESSES
# This is an optional comma-delimited list of IP address or hostnames 
# that are allowed to talk to the NRPE daemon. Network addresses with a bit mask
# (i.e. 192.168.1.0/24) are also supported. Hostname wildcards are not currently 
# supported.
#
# Note: The daemon only does rudimentary checking of the client's IP
# address.  I would highly recommend adding entries in your /etc/hosts.allow
# file to allow only the specified host to connect to the port
# you are running this daemon on.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

allowed_hosts=127.0.0.1,96.119.1.161,96.119.5.6,172.24.185.134,172.24.243.82,172.24.247.68,172.24.185.135
# COMMAND ARGUMENT PROCESSING
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments to commands that are executed.  This option only works
# if the daemon was configured with the --enable-command-args configure script
# option.  
#
# *** ENABLING THIS OPTION IS A SECURITY RISK! *** 
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow arguments, 1=allow command arguments

dont_blame_nrpe=0



# COMMAND PREFIX
# This option allows you to prefix all commands with a user-defined string.
# A space is automatically added between the specified prefix string and the
# command line from the command definition.
#
# *** THIS EXAMPLE MAY POSE A POTENTIAL SECURITY RISK, SO USE WITH CAUTION! ***
# Usage scenario: 
# Execute restricted commmands using sudo.  For this to work, you need to add
# the nagios user to your /etc/sudoers.  An example entry for alllowing 
# execution of the plugins from might be:
#
# nagios          ALL=(ALL) NOPASSWD: /usr/lib/nagios/plugins/
#
# This lets the nagios user run all commands in that directory (and only them)
# without asking for a password.  If you do this, make sure you don't give
# random users write access to that directory or its contents!

# command_prefix=/usr/bin/sudo 



# DEBUGGING OPTION
# This option determines whether or not debugging messages are logged to the
# syslog facility.
# Values: 0=debugging off, 1=debugging on

debug=0



# COMMAND TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# allow plugins to finish executing before killing them off.

command_timeout=60



# CONNECTION TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# wait for a connection to be established before exiting. This is sometimes
# seen where a network problem stops the SSL being established even though
# all network sessions are connected. This causes the nrpe daemons to
# accumulate, eating system resources. Do not set this too low.

connection_timeout=300



# WEEK RANDOM SEED OPTION
# This directive allows you to use SSL even if your system does not have
# a /dev/random or /dev/urandom (on purpose or because the necessary patches
# were not applied). The random number generator will be seeded from a file
# which is either a file pointed to by the environment valiable $RANDFILE
# or $HOME/.rnd. If neither exists, the pseudo random number generator will
# be initialized and a warning will be issued.
# Values: 0=only seed from /dev/[u]random, 1=also seed from weak randomness

#allow_weak_random_seed=1



# INCLUDE CONFIG FILE
# This directive allows you to include definitions from an external config file.

#include=<somefile.cfg>



# INCLUDE CONFIG DIRECTORY
# This directive allows you to include definitions from config files (with a
# .cfg extension) in one or more directories (with recursion).

#include_dir=<somedirectory>
#include_dir=<someotherdirectory>



# COMMAND DEFINITIONS
# Command definitions that this daemon will run.  Definitions
# are in the following format:
#
# command[<command_name>]=<command_line>
#
# When the daemon receives a request to return the results of <command_name>
# it will execute the command specified by the <command_line> argument.
#
# Unlike Nagios, the command line cannot contain macros - it must be
# typed exactly as it should be executed.
#
# Note: Any plugins that are used in the command lines must reside
# on the machine that this daemon is running on!  The examples below
# assume that you have plugins installed in a /usr/lib64/nagios/plugins
# directory.  Also note that you will have to modify the definitions below
# to match the argument format the plugins expect.  Remember, these are
# examples only!


# The following examples use hardcoded command arguments...

# system base
command[check_users]=/usr/lib64/nagios/plugins/check_users -w 5 -c 10
command[check_load]=/usr/lib64/nagios/plugins/check_load -w 15,10,5 -c 30,25,20
command[check_disk]=/usr/lib64/nagios/plugins/check_disk -w 20% -c 10% -p /
command[check_zombie_procs]=/usr/lib64/nagios/plugins/check_procs -w 5 -c 10 -s Z
command[check_total_procs]=/usr/lib64/nagios/plugins/check_procs -w 700 -c 1000 
command[check_tomcat_heap]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:6969/jmxrmi -O java.lang:type=Memory -A HeapMemoryUsage -K used -I HeapMemoryUsage -J used -vvvv -w 4248302272 -c 5498760192
command[check_tomcat_thread]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:6969/jmxrmi -O "java.lang:type=Threading" -A  ThreadCount
command[check_tomcat_FD]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:6969/jmxrmi -O "java.lang:type=OperatingSystem" -A OpenFileDescriptorCount -w 800 -c 1000
command[check_iostat]=/usr/lib64/nagios/plugins/check_iostat -d vda -w 400,400,400 -c 500,500,500
command[check_tomcat]=/usr/lib64/nagios/plugins/check_http -H localhost --port 8080 --warning 50 --critical 90
command[check_https]=/usr/lib64/nagios/plugins/check_http -H localhost --port 443 --warning 50 --critical 90
command[check_http]=/usr/lib64/nagios/plugins/check_http -H localhost --port 80 --warning 50 --critical 90
command[check_ssh]=/usr/lib64/nagios/plugins/check_ssh -p 22 -H localhost
command[check_ping]=/usr/lib64/nagios/plugins/check_ping -H localhost -w 3000.0,80% -c 5000.0,100% -p 5
command[check_mem]=/usr/lib64/nagios/plugins/check_mem.pl -u -C -w 80 -c 90
command[check_mysql_health]=/usr/lib64/nagios/plugins/check_mysql_health -H localhost --user $ARG1$ --password $ARG2$ --mode $ARG3$ 
command[check_open_fds]=/usr/lib64/nagios/plugins/check_open_fds 
command[check_tomcat_port]=/usr/lib64/nagios/plugins/check_port.pl -p 8080 -h localhost -w 10 -c 15
command[check_total_procs]=/usr/lib64/nagios/plugins/check_procs -w 150 -c 200 
command[check_tomcat_heap]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:6969/jmxrmi -O java.lang:type=Memory -A HeapMemoryUsage -K used -I HeapMemoryUsage -J used -vvvv -w 4248302272 -c 5498760192
command[check_tomcat_thread]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:6969/jmxrmi -O "java.lang:type=Threading" -A  ThreadCount
command[check_tomcat_FD]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:6969/jmxrmi -O "java.lang:type=OperatingSystem" -A OpenFileDescriptorCount -w 200 -c 400
command[check_iostat]=/usr/lib64/nagios/plugins/check_iostat -d vda -w 100,100,100 -c 200,200,200
command[check_ssh]=/usr/lib64/nagios/plugins/check_ssh -p 22 -H localhost
command[check_ping]=/usr/lib64/nagios/plugins/check_ping -H localhost -w 3000.0,80% -c 5000.0,100% -p 5
command[check_mem]=/usr/lib64/nagios/plugins/check_mem.pl -u -C -w 80 -c 90
command[check_open_fds]=/usr/lib64/nagios/plugins/check_open_fds 

# tomcat
command[check_tomcat]=/usr/lib64/nagios/plugins/check_http -H localhost --port 8080 --warning 50 --critical 90
command[check_tomcat_port]=/usr/lib64/nagios/plugins/check_port.pl -p 8080 -h localhost -w 10 -c 15
command[check_https]=/usr/lib64/nagios/plugins/check_http -H localhost --port 443 --warning 50 --critical 90
command[check_http]=/usr/lib64/nagios/plugins/check_http -H localhost --port 80 --warning 50 --critical 90

# haproxy
# haproxy only for usm racon
command[aupm-usm_check_haproxy]=/usr/lib64/nagios/plugins/check_port.pl -p 34180 -h localhost -w 2 -c 3

# cassandra
command[check_cassandra_FD]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:7199/jmxrmi -O "java.lang:type=OperatingSystem" -A OpenFileDescriptorCount -w 2200  -c 3000
command[check_cassandra_heap]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:7199/jmxrmi -O java.lang:type=Memory -A HeapMemoryUsage -K used -I HeapMemoryUsage -J used -vvvv -w 4248302272 -c 5498760192
command[check_cassandra_tread]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:7199/jmxrmi -O java.lang:type=Threading -A ThreadCount
command[check_cassandra_peak_thread]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:7199/jmxrmi -O java.lang:type=Threading -A PeakThreadCount
command[check_cassandra_usertime]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:7199/jmxrmi -O java.lang:type=Threading -A CurrentThreadUserTime
command[check_cassandra_gc]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:7199/jmxrmi  -O "java.lang:type=GarbageCollector,name=ConcurrentMarkSweep" -A LastGcInfo -K duration -w 3500 -c 4000 -u ms
command[check_haproxy_slaves]=/usr/lib64/nagios/plugins/check_hastats.pl localhost:31381 10 15

command[check_cassandra_gc]=/usr/lib64/nagios/plugins/check_jmx -U service:jmx:rmi:///jndi/rmi://localhost:7199/jmxrmi  -O "java.lang:type=GarbageCollector,name=ConcurrentMarkSweep" -A LastGcInfo -K duration -w 8000 -c 10000 -u ms

# mysql
command[check_mysql_health]=/usr/lib64/nagios/plugins/check_mysql_health -H localhost --user nagios --password nagios --mode connection-time
command[check_mysql_keychache]=/usr/lib64/nagios/plugins/check_mysql_health -H localhost --user nagios --password nagios --mode keycache-hitrate
command[check_mysql_qcache]=/usr/lib64/nagios/plugins/check_mysql_health -H localhost --user nagios --password nagios --mode qcache-hitrate
command[check_mysql_tablecache]=/usr/lib64/nagios/plugins/check_mysql_health -H localhost --user nagios --password nagios --mode tablecache-hitrate
command[check_splunk]=/usr/lib64/nagios/plugins/check_procs -c 2: -C splunkd
command[check_disk_media]=/usr/lib64/nagios/plugins/check_disk -w 54% -c 50% -p /usr/local/codem-transcode/videos_test/
command[check_mysql_health]=/usr/lib64/nagios/plugins/check_mysql_health -H localhost --user $ARG1$ --password $ARG2$ --mode $ARG3$ 

# The following examples allow user-supplied arguments and can
# only be used if the NRPE daemon was compiled with support for 
# command arguments *AND* the dont_blame_nrpe directive in this
# config file is set to '1'.  This poses a potential security risk, so
# make sure you read the SECURITY file before doing this.

#command[check_users]=/usr/lib64/nagios/plugins/check_users -w $ARG1$ -c $ARG2$
#command[check_load]=/usr/lib64/nagios/plugins/check_load -w $ARG1$ -c $ARG2$
#command[check_disk]=/usr/lib64/nagios/plugins/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
#command[check_procs]=/usr/lib64/nagios/plugins/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
command[check_ugc_version]=/usr/lib64/nagios/plugins/check_http -H localhost --port 8080 -u http://localhost:8080/ugc/version --warning 30 --critical 50
command[check_media_version]=/usr/lib64/nagios/plugins/check_http -H localhost --port 8080 -u http://localhost:8080/media/version --warning 30 --critical 50
